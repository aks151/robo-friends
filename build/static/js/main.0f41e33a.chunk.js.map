{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAACC,GACV,IAAQC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACrB,OACA,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAM,OAAOC,IAAG,+BAA4BH,EAA5B,cACjB,gCACI,+BAAKF,EAAL,OACA,4BAAIC,WCYLK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OACA,cAAC,EAAD,CACAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHJM,EAAOI,GAAGT,OAQ3B,OACI,8BACKM,KCAEI,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKX,UAAY,MAAjB,SACI,uBACAA,UAAY,mCACZY,KAAO,SACPC,YAAc,cACdC,SAAYH,OCATI,G,MARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKvB,EAAMwB,aCwCJC,E,kDArCX,aACC,IAAD,8BACI,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAZ1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRM,YAAa,IAJrB,E,qDAOA,WACC,IAAD,OACIkB,MAAM,8CACLvC,MAAK,SAAAwC,GAAQ,OAAGA,EAASC,UACzBzC,MAAK,SAAA0C,GAAK,OAAI,EAAKP,SAAS,CAAEpB,OAAQ2B,S,oBAO3C,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAAC,GAC5C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAEpE,OACI,sBAAKpC,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAU4B,a,GA7BlBM,aCAlBC,IAASC,OACR,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.0f41e33a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { name, email, id} = props; // destructuring\r\n    return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow'>\r\n        <img alt = 'robo' src = {`https://robohash.org/${id}?200x200`}/> \r\n            <div>\r\n                <h2>{name} </h2>\r\n                <p>{email}</p>\r\n            </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardsArray = robots.map((user,i) =>{\r\n        return (\r\n        <Card key = {robots[i].id} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n        />\r\n    );\r\n    }\r\n        )\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className = 'pa2'> \r\n            <input \r\n            className = 'pa2 ba b--green bg-lightest-blue'\r\n            type = 'search' \r\n            placeholder = 'SearchRobos'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{ Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n    }\r\n    onSearchChange = (event) =>{\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n        \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return (\r\n            <div className = 'tc'> \r\n                <h1 className = 'f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll> \r\n                <CardList robots = {filteredRobots} />\r\n                </Scroll>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}